#Program 3 - Square Root
# LOAD ALL SOURCE DATA
SEI 17
LW R0, RIM 	# LSB 
SEI 16		
LW R1, RIM	# MSB 

# X_n => R2 INITIAL GUESS = 1
SEI 1
ADD R2, RIM
SEI O
ADD R3, RIM # INITIALIZE R3 (X_n+1)

START:
SEI 0
ADD R7, RIM   # SET COUNTER
ADD R4, RIM   # INITIALIZE QUOTIENT A/X_n
ADD R5, RIM	  # INITIALIZE Register for compare

LOOP:
#X_n+1 = ½ * (X_n + a/X_n)
#a/X_n => R4   ← DIVISION
SHIFTL_X R0   # SHIFT DIVIDEND A
SHIFTL_O R1  
SHIFTL_O R5   # SHIFT COMPARE REG

CLT R2, R5 # COMPARE DIVISOR WITH COMPARE REG
B1 RESULT2
CEQ R2, R5

RESULT2:
SHIFTL_F R4   # SHIFT QUOTIENT

B0 SKIPSUB:
SUB R5, R2 # COMPARE REG - DIVISOR

SKIPSUB:
SEI 1
ADD R7, RIM  # INCREMENT COUNTER
SEI 8
CEQ R6, RIM  # COMPARE IF COUNTER IS EQUAL TO 8
B0 LOOP

# a/X_n + X_n => R4 = R4 + R2
ADD R4, R2
#½ SHIFT RIGHT BY 1 BIT 
SHIFTR_X R4       # X_n+1 = ½ * (X_n + a/X_n)

# CHECK IF X_n == X_n+1
CEQ R2, R3
SEI 0
ADD R2, RIM
ADD R2, R4   # UPDATE R2 (X_N) FOR NEXT ITERATION 
B0 START

# STORE FINAL RESULT
SEI 18
SW R4, RIM

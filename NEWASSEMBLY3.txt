# INITLAIZE DIVISOR TO 1
SEI 0
ADD R3, RIM
SEI 1
ADD R4, RIM
#INITALIZE QUOTIENT TO 0
SEI 0
ADD R5, RIM
ADD R6, RIM
# INTIALIZE COMPARE TO 0, SAVE TO MEM
SEI 0
ADD R1, RIM
ADD R2, RIM
SEI 23
LW R1, RIM
SEI 24
LW R2, RIM
# INITALIZE COUNTER TO 0, SAVE TO MEM
SEI 0
ADD R0, RIM 
SEI 22
SW R0, RIM 
TOP:
# LOAD DIVIDENT
SEI 16
LW R0, RIM
SEI 17
LW R1, RIM
SEI 0 # APPEND 8 0s AT THE END OF DIVIDEND
ADD R2, RIM
SEI 19
SW R0, RIM
SEI 20
SW R1, RIM
SEI 21
SW R2, RIM

DIVLOOP: 
# LOAD DIVIDENT
SEI 19
LW R0, RIM
SEI 20
LW R1, RIM
SEI 21
LW R2, RIM

#SHIFT DIVIDENT LEFT
SHIFTL_X R2
SHIFTL_O R1
SHIFTL_O R0

#STORE DIVIDENT BACK TO MEM
SEI 19
SW R0, RIM
SEI 20
SW R1, RIM
SEI 21
SW R2, RIM

#LOAD COMPARE
SEI 23
LW R1, RIM
SEI 24
LW R2, RIM

#SHIFT COMPARE
SHIFTL_O R2
SHIFTL_O R1

#COMPARE THE DIVISOR WITH COMPARE REG
#MSB
CLT R3, R1
B1 COMPARELARGER
CEQ R3,R1
B0 COMPARESMALLER

#LSB
CLT R4, R2
B1 COMPARELARGER
CEQ R4, R2
B0 COMPAREMALLER

COMPARELARGER: # DO SUB
SUB R2, R4
SUB R1, R3

COMPARESMALLER: # SHIFT QUOTIENT
SHIFTL_F R6
SHIFTL_O R5

#ADD COUNTER
SEI 22
LW R0, RIM
SEI 1
ADD R0, RIM

SEI 16
CEQ R0, RIM

SEI 22
SW R0, RIM
B0 DIVLOOP

#STORE QUOTIENT
SEI 25
SW R5, RIM
SEI 26
SW R6, RIM

# ADD DIVISOR
ADD R6, R4
ADD R5, R3

#RIGHT SHIFT BY 1
SHIFTR_X R5
SHIFTR_O R6

#STORE QUOTIENT
SEI 25
SW R5, RIM
SEI 26
SW R6, RIM

SEI 0 
SUB R6, R4
CEQ R6, RIM
B1 CONTINUE
SUB R5, R3
CEQ R5, RIM
B0 FOUND

CONTINUE:
SUB R3, R3
SUB R4, R4
ADD R4, R6
ADD R3, R5

SUB R1, R1
SUB R2, R2
SUB R5, R5
SUB R6, R6
SEI 22
LW R0, RIM
SUB R0, R0
SW R0, RIM
B0 TOP
B1 TOP


FOUND:
#STORE FINAL RESULT INTO MEM 18
#ROUNDING
SUB R0, R0
SHIFTL_X R4
SHIFTL_O R0
SEI 0
CEQ R0, RIM
B1 NOROUNDUP
SEI 1
ADD R3, RIM
NOROUNDUP:
SEI 18
SW R3, RIM

# TOP = 0
# DIVLOOP = 1
# CONTINUE = 2
# FOUND = 3
# NOROUNDUP = 4